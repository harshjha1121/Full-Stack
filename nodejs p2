const express = require('express');
const app = express();

app.use(express.json()); // Middleware to parse JSON bodies

// In-memory playing card collection
let cards = [];
let nextId = 1; // Auto-increment ID

// GET /cards -> List all cards
app.get('/cards', (req, res) => {
  res.json(cards);
});

// GET /cards/:id -> Retrieve a card by ID
app.get('/cards/:id', (req, res) => {
  const id = parseInt(req.params.id);
  const card = cards.find(c => c.id === id);
  if (!card) {
    return res.status(404).json({ error: 'Card not found' });
  }
  res.json(card);
});

app.post('/cards', (req, res) => {
  const { suit, value } = req.body;
  if (!suit || !value) {
    return res.status(400).json({ error: 'Suit and Value are required' });
  }
  const newCard = { id: nextId++, suit, value };
  cards.push(newCard);
  res.status(201).json(newCard);
});

app.delete('/cards/:id', (req, res) => {
  const id = parseInt(req.params.id);
  const index = cards.findIndex(c => c.id === id);
  if (index === -1) {
    return res.status(404).json({ error: 'Card not found' });
  }
  const removed = cards.splice(index, 1);
  res.json({ message: `Card ${removed[0].value} of ${removed[0].suit} deleted` });
});

const PORT = 3000;
app.listen(PORT, () => {
  console.log(`Playing Card API running at http://localhost:${PORT}`);
});
